Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table =10000
ii. Business table =10000
iii. Category table =10000
iv. Checkin table =10000
v. elite_years table =10000
vi. friend table =10000
vii. hours table =10000
viii. photo table =10000 
ix. review table =10000
x. tip table =10000
xi. user table =10000

#An example of SQL code is as follows:

SELECT COUNT(*) AS Total_Record
FROM attribute;
+--------------+
| Total_Record |
+--------------+
|        10000 |
+--------------+

2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business =10000
ii. Hours =1562
iii. Category =2643
iv. Attribute =1115
v. Review =10000,8090,9581
vi. Checkin =493
vii. Photo =10000,6493
viii. Tip = 537,3979
ix. User =10000
x. Friend = 11
xi. Elite_years =2780

SELECT COUNT(DISTINCT id) 
FROM business;
+-----------+
| COUNT(id) |
+-----------+
|     10000 |
+-----------+

SELECT COUNT (DISTINCT business_id) 
FROM hours;

SELECT COUNT (DISTINCT business_id) 
FROM category;

SELECT COUNT (DISTINCT business_id) 
FROM attribute;

SELECT COUNT (DISTINCT id),COUNT (DISTINCT business_id),COUNT (DISTINCT user_id)
FROM review;

SELECT COUNT (DISTINCT business_id) 
FROM checkin;

SELECT COUNT (DISTINCT id), COUNT (DISTINCT business_id) 
FROM photo;

SELECT COUNT (DISTINCT user_id), COUNT (DISTINCT business_id) 
FROM tip;

SELECT COUNT (DISTINCT id) 
FROM user;

SELECT COUNT (DISTINCT user_id) 
FROM friend;

SELECT COUNT (DISTINCT user_id) 
FROM Elite_years;


3. Are there any columns with null values in the Users table? Indicate "yes," or "no."
	Answer: No

#SQL code:
SELECT count(*)
FROM user
WHERE id IS NULL or name IS NULL or review_count IS Null or yelping_since IS Null or
useful IS NULL or funny IS NULL or cool IS NULL or fans IS NULL or average_stars IS NULL or 
compliment_hot IS NULL or compliment_more IS NULL or compliment_profile IS NULL or
compliment_cute IS NULL or compliment_list IS NULL or compliment_note IS NULL or
compliment_plain IS NULL or compliment_cool IS NULL or compliment_funny IS NULL or compliment_writer IS NULL
or compliment_photos IS NULL

+----------+
| count(*) |
+----------+
|        0 |
+----------+

4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
		min:1		max:5		avg:3.7082	
	ii. Table: Business, Column: Stars
		min:1.0		max:5.0		avg: 3.6549 	
	iii. Table: Tip, Column: Likes
		min:0		max:2		avg:0.0144	
	iv. Table: Checkin, Column: Count
		min:1		max:53		avg:1.9414	
	v. Table: User, Column: Review_count
		min:0		max:2000		avg:24.2995

	SELECT MIN(stars) AS min_stars, MAX(stars) AS max_stars, AVG(stars) AS avg_stars
FROM review
+-----------+-----------+-----------+
| min_stars | max_stars | avg_stars |
+-----------+-----------+-----------+
|         1 |         5 |    3.7082 |
+-----------+-----------+-----------+
SELECT MIN(stars) AS min_stars, MAX(stars) AS max_stars, AVG(stars) AS avg_stars
FROM business
+-----------+-----------+-----------+
| min_stars | max_stars | avg_stars |
+-----------+-----------+-----------+
|       1.0 |       5.0 |    3.6549 |
+-----------+-----------+-----------+
SELECT MIN(likes) AS min_likes, MAX(likes) AS max_likes, AVG(likes) AS avg_likes
FROM tip
+-----------+-----------+-----------+
| min_likes | max_likes | avg_likes |
+-----------+-----------+-----------+
|         0 |         2 |    0.0144 |
+-----------+-----------+-----------+
SELECT MIN(count) AS min_count, MAX(count) AS max_count, AVG(count) AS avg_count
FROM checkin
+-----------+-----------+-----------+
| min_count | max_count | avg_count |
+-----------+-----------+-----------+
|         1 |        53 |    1.9414 |
+-----------+-----------+-----------+
SELECT MIN(review_count) AS min_review_count, MAX(review_count) AS max_review_count, AVG(review_count) AS avg_review_count
FROM user
+------------------+------------------+------------------+
| min_review_count | max_review_count | avg_review_count |
+------------------+------------------+------------------+
|                0 |             2000 |          24.2995 |
+------------------+------------------+------------------+

5. List the cities with the most reviews in descending order:
SQL code used to arrive at answer:

SELECT city,SUM(review_count) AS Sum_review_count
FROM business
GROUP BY city
ORDER BY Sum_review_count DESC;
	
Copy and Paste the Result Below:
+-----------------+------------------+
| city            | Sum_review_count |
+-----------------+------------------+
| Las Vegas       |            82854 |
| Phoenix         |            34503 |
| Toronto         |            24113 |
| Scottsdale      |            20614 |
| Charlotte       |            12523 |
| Henderson       |            10871 |
| Tempe           |            10504 |
| Pittsburgh      |             9798 |
| Montréal        |             9448 |
| Chandler        |             8112 |
| Mesa            |             6875 |
| Gilbert         |             6380 |
| Cleveland       |             5593 |
| Madison         |             5265 |
| Glendale        |             4406 |
| Mississauga     |             3814 |
| Edinburgh       |             2792 |
| Peoria          |             2624 |
| North Las Vegas |             2438 |
| Markham         |             2352 |
| Champaign       |             2029 |
| Stuttgart       |             1849 |
| Surprise        |             1520 |
| Lakewood        |             1465 |
| Goodyear        |             1155 |
+-----------------+------------------+

Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT stars, count(stars)
From business
WHERE city='Avon'
Group by stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------+--------------+
| stars | count(stars) |
+-------+--------------+
|   1.5 |            1 |
|   2.5 |            2 |
|   3.5 |            3 |
|   4.0 |            2 |
|   4.5 |            1 |
|   5.0 |            1 |
+-------+--------------+

Sii. Beachwood

SQL code used to arrive at answer:

SELECT stars, count(stars)
From business
WHERE city='Beachwood'
Group by stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------+--------------+
| stars | count(stars) |
+-------+--------------+
|   2.0 |            1 |
|   2.5 |            1 |
|   3.0 |            2 |
|   3.5 |            2 |
|   4.0 |            1 |
|   4.5 |            2 |
|   5.0 |            5 |
+-------+--------------+

7. Find the top 3 users based on their total number of reviews:
		
SQL code used to arrive at answer:

SELECT id, name, review_count
FROM user
ORDER by review_count DESC
LIMIT 3;
		
Copy and Paste the Result Below:
+------------------------+--------+--------------+
| id                     | name   | review_count |
+------------------------+--------+--------------+
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald |         2000 |
| -3s52C4zL_DHRK0ULG6qtg | Sara   |         1629 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri   |         1339 |
+------------------------+--------+--------------+


8. Does posing more reviews correlate with more fans?

Please explain your findings and interpretation of the results:
The results show that there is not significant correlation between number of reviews and fans. As an example, Gerald, sara, and Yuri are the first three users with the most number of review; however, the number of fans with the most values are not belong to them.

SQL code:
SELECT name,review_count, fans
FROM user
ORDER by review_count DESC;

+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Gerald    |         2000 |  253 |
| Sara      |         1629 |   50 |
| Yuri      |         1339 |   76 |
| .Hon      |         1246 |  101 |
| William   |         1215 |  126 |
| Harald    |         1153 |  311 |
| eric      |         1116 |   16 |
| Roanna    |         1039 |  104 |
| Mimi      |          968 |  497 |
| Christine |          930 |  173 |
| Ed        |          904 |   38 |
| Nicole    |          864 |   43 |
| Fran      |          862 |  124 |
| Mark      |          861 |  115 |
| Christina |          842 |   85 |
| Dominic   |          836 |   37 |
| Lissa     |          834 |  120 |
| Lisa      |          813 |  159 |
| Alison    |          775 |   61 |
| Sui       |          754 |   78 |
| Tim       |          702 |   35 |
| L         |          696 |   10 |
| Angela    |          694 |  101 |
| Crissy    |          676 |   25 |
| Lyn       |          675 |   45 |
+-----------+--------------+------+

9. Are there more reviews with the word "love" or with the word "hate" in them?

Answer:
The review with the word "love" is more than the review with the "hate" word
	
 SQL code used to arrive at answer:

SELECT count(*) AS 'love'
FROM review 
WHERE text LIKE '%love%'; 
+------+
| love |
+------+
| 1780 |
+------+

SELECT count(*) AS 'hate'
FROM review 
WHERE text LIKE '%hate%';
 +------+
| hate |
+------+
|  232 |
+------+

10. Find the top 10 users with the most fans:

SQL code used to arrive at answer:

SELECT id,name,fans
FROM user
ORDER by fans DESC
LIMIT 10	
	
Copy and Paste the Result Below:
+------------------------+-----------+------+
| id                     | name      | fans |
+------------------------+-----------+------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
+------------------------+-----------+------+

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
I choose Phoenix as a city and Restaurant as a category. The results are analyzed for weekend.

i. Do the two groups you chose to analyze have a different distribution of hours?
Yes. The results show that for the group with 4-5 stars the closing hour is later than the group with 2-3 stars.

ii. Do the two groups you chose to analyze have a different number of reviews?
Yes. The number of reviews for the group with 4-5 stars is more the group with 2-3 stars.
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
By comparing the postal code of two groups, we can interpret that for this business, there is correlation between the location and stars. 	
SQL code used for analysis:
i)ii)
SELECT business.id,hours.hours,category.category
	,(
		CASE 
			WHEN business.stars BETWEEN 2
					AND 3
				THEN '2-3'
			WHEN business.stars BETWEEN 4 
                    AND 5
				THEN '4-5'
			ELSE NULL
			END
		) AS Rating
        ,business.review_count
FROM (business 
JOIN category ON business.id=category.business_id) JOIN hours
ON category.business_id=hours.business_id
WHERE business.city ='Phoenix'
	AND Rating NOT NULL 
    AND category='Food' 
    AND hours LIKE 'S%'
    ORDER BY Rating;
+----------------------+----------+--------+--------------+-------------+
| hours                | category | Rating | review_count | postal_code |
+----------------------+----------+--------+--------------+-------------+
| Sunday|5:00-20:00    | Food     | 2-3    |           52 | 85048       |
| Saturday|5:00-20:00  | Food     | 2-3    |           52 | 85048       |
| Sunday|11:00-22:00   | Food     | 4-5    |          431 | 85028       |
| Saturday|11:00-22:00 | Food     | 4-5    |          431 | 85028       |
+----------------------+----------+--------+--------------+-------------+


2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.

 Two business groups are compared using average number of reviews and stars as well as number of "cool" and "funny" that are given to the business.
 
i. Difference 1: For the businesses that are open, the average of review and stars is more than the business that are closed.        
ii. Difference 2: The business that are open are much more considered as funny and cool.
                       
SQL code used for analysis:

SELECT business.is_open,AVG(business.review_count) AS Ave_review, AVG(business.stars) AS Ave_stars,COUNT(review.cool) AS Num_cool,COUNT(review.funny) AS Num_funny
From business
JOIN review ON business.id=review.business_id
GROUP BY is_open; 

+---------+---------------+---------------+----------+-----------+
| is_open |    Ave_review |     Ave_stars | Num_cool | Num_funny |
+---------+---------------+---------------+----------+-----------+
|       0 | 129.816901408 | 3.54225352113 |       71 |        71 |
|       1 | 311.187610619 |  3.7610619469 |      565 |       565 |
+---------+---------------+---------------+----------+-----------+

--------+
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:

i. Indicate the type of analysis you chose to do:
I want to answer to this question that whether closing hour of restaurants after midnight on Saturday in the 'ON' state, can be a factor to receive good stars.
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
 To answer to this question, three tables (i.e., business, category, and hours tables) are used. From business table, the states and stars information are utilized. Type of business and hours of closing business on Saturday are selected from category and hours tables, respectively. This analysis provide information to determine that the specific business can be closed after midnight on Saturday without decreasing the stars rate. If yes, there might be a saving opportunity for the business owners.

iii. Output of your finished dataset:
The output of this work is the average of stars for two groups. The first group includes restaurants that their closing hours is after midnight on Saturday in 'ON' state and the second group is the restaurants that their closing hours is before midnight on the weekend in 'ON' state. As this average in the first group and second group are 4.5 and 3.3, respectively, we can conclude that closing restaurants in these specific time slots and date may affect on the stars rate.

iv. Provide the SQL code you used to create your final dataset:

SELECT AVG(business.stars) AS AVG_stars_group1
FROM (business 
JOIN category ON business.id=category.business_id) JOIN hours
ON category.business_id=hours.business_id
WHERE (CASE
    WHEN SUBSTR(hours, -5,1)=='-'
           THEN SUBSTR(hours, -4,1)
    WHEN SUBSTR(hours, -5,1)!='-'
           THEN SUBSTR(hours, -5,2)  
    END
) IN ('0','1','2','3','4') 
AND hours LIKE 'Su%' 
AND category='Restaurants'
AND state='ON';

SELECT AVG(business.stars) AS AVG_stars_group2
FROM (business 
JOIN category ON business.id=category.business_id) JOIN hours
ON category.business_id=hours.business_id
WHERE (CASE
    WHEN SUBSTR(hours, -5,1)=='-'
           THEN SUBSTR(hours, -4,1)
    WHEN SUBSTR(hours, -5,1)!='-'
           THEN SUBSTR(hours, -5,2)  
    END
) NOT IN ('0','1','2','3','4') 
AND hours LIKE 'Su%' 
AND category='Restaurants'
AND state='ON';

+------------------+
| AVG_stars_group1 |
+------------------+
|              4.5 |
+------------------+

+------------------+
| AVG_stars_group2 |
+------------------+
|           3.3125 |
+------------------+


